<?xml version="1.0" encoding="utf-8"?>
<Module>
  <ModulePrefs 
    author="Mark Hawker"
    author_email="socialprogramming+googlegadget@googlemail.com" 
    description="A test Google Gadget."
    screenshot=""
    thumbnail=""
    title="Color Picker"
    directory_title="Color Picker" 
    height="100" 
    scrolling="true"
  >
    <Require feature="opensocial-0.9" />
    <Require feature="osapi" />
    <Require feature="dynamic-height" />
    <Optional feature="skins" />
  </ModulePrefs>
  <Content type="html" view="default">
    <![CDATA[
    <html>
      <head>
        <title>Color Picker</title>
          <style type="text/css">
            body { padding: 2px; margin: 2px; }
            p { font-size: 10px; padding: 2px; margin: 2px; }
            h1 { font-size: 12px; }
            h2 { font-size: 11px; }
            h3 { font-size: 10px; }
            #gadget { width: 250px; }
            #colorTable { width: 100%; }
            #colorPicker { margin: 20px 40px; }
            #redCell { border: 3px solid #666666; }
            .color { width: 20px; height: 20px; border: 3px solid #e5ecf9; }
            .red { background-color: red; }
            .orange { background-color: orange; }
            .green { background-color: green; }
            .yellow { background-color: yellow; }
            .blue { background-color: blue; }
            .pink { background-color: pink; }
            .memberPhoto { width: 46px; height: 46px; border: 0; padding-right: 2px; }
          </style>
       </head>
     <body>
     <div id="gadget">
      <h1>Welcome to <span id="owner"></span></h1>
      <p>This application demonstrates <a href="http://www.google.com/friendconnect/">Google Friend Connect</a> and its Google Gadget capabilities.</p>
      <h2>Recent Members</h2>
      <p id="recentMembers"></p>
      <p>Once you've signed in you can generate an activity by clicking a color below and pressing the "Pick" button:</p>
      <div id="colorPicker">
             <table id="colorTable" cellspacing="10">
               <tr>
                 <td><div class="color red" onclick="pickColor(this, 'red');" id="redCell"></div></td>
                 <td><div class="color orange" onclick="pickColor(this, 'orange');"></div></td>
                 <td><div class="color green" onclick="pickColor(this, 'green');"></div></td>
                 <td style="width: 10px;" rowspan="2"><button onclick="createActivity();" id="button" disabled="disabled">Pick</button></td>
               </tr>
               <tr>
                 <td><div class="color yellow" onclick="pickColor(this, 'yellow');"></div></td>
                 <td><div class="color blue" onclick="pickColor(this, 'blue');"></div></td>
                 <td><div class="color pink" onclick="pickColor(this, 'pink');"></div></td>
               </tr>
             </table>
           </div>
      <h2>Recent Activities</h2>
      <p id="recentActivities"></p>
     </div>
     <script type="text/javascript">
            var viewer;
            gadgets.util.registerOnLoadHandler(init);
            function init() {
              skin();
              initAllData();
            }
            function skin() {
              var borderColor = gadgets.skins.getProperty('BORDER_COLOR');
              var endcapBgColor  = gadgets.skins.getProperty('ENDCAP_BG_COLOR');
              var endcapTextColor = gadgets.skins.getProperty('ENDCAP_TEXT_COLOR');
              var endcapLinkColor = gadgets.skins.getProperty('ENDCAP_LINK_COLOR');
              var alternateBgColor = gadgets.skins.getProperty('ALTERNATE_BG_COLOR');
              var contentBgColor = gadgets.skins.getProperty('CONTENT_BG_COLOR');
              var contentLinkColor = gadgets.skins.getProperty('CONTENT_LINK_COLOR');
              var contentTextColor = gadgets.skins.getProperty('CONTENT_TEXT_COLOR');
              var contentSecondaryLinkColor = gadgets.skins.getProperty('CONTENT_SECONDARY_LINK_COLOR');
              var contentSecondaryTextColor = gadgets.skins.getProperty('CONTENT_SECONDARY_TEXT_COLOR');
              var contentHeadlineColor = gadgets.skins.getProperty('CONTENT_HEADLINE_COLOR');
              html = new Array();
              html.push('<style type="text/css">');
              html.push(' body { color: ' + contentTextColor + '; background-color: ' + contentBgColor + '; }');
              html.push('</style>');
              document.write(html.join(''));
            }
            function initAllData() {
              var buttonHtml = document.getElementById('button').disabled = true;
              var batch = osapi.newBatch();
              var viewerParams = {
                'fields': [
                  opensocial.Person.Field.NAME
                ]
              };
              var membersParams = {
                'count': 5,
                'fields': [
                  opensocial.Person.Field.ID,
                  opensocial.Person.Field.NAME,
                  opensocial.Person.Field.THUMBNAIL_URL,
                  opensocial.Person.Field.PROFILE_URL
                ]
              };
             var activitiesParams = {
               'userId': '@owner',
               'groupId': '@friends',
               'count': 2
             }
             batch.add('owner', osapi.people.getOwner());
             batch.add('viewer', osapi.people.getViewer(viewerParams));
             batch.add('members', osapi.people.getOwnerFriends(membersParams));
             batch.add('activities', osapi.activities.get(activitiesParams));
             batch.execute(onData);
           }
           function onData(data) {
              // Owner
              if(!data.owner.error) {
                var owner = data.owner;
                var ownerName = owner.displayName;
                document.getElementById('owner').innerHTML = ownerName;
              } else {
                document.getElementById('owner').innerHTML = 'this site';
              }
              // Viewer
              if(!data.viewer.error) {
                viewer = data.viewer;
                var buttonHtml = document.getElementById('button').disabled = false;
              } else {
                // data.viewer.error.code
                // data.viewer.error.message
              }
              // Members
              var membersHtml = document.getElementById('recentMembers');
              if (!data.members.error) {
                var members = data.members;
                membersHtml.innerHTML = '';
                if (members.totalResults > 0) {
                  for (var i in members.list) {
                    membersHtml.innerHTML += '<a href="' + members.list[i].profileUrl + '" title="' + members.list[i].displayName + '"><img class="memberPhoto" src="' + members.list[i].thumbnailUrl + '" height="65" width="65" alt="' + members.list[i].displayName + '" /></a>';
                  }
                } else {
                  membersHtml.innerHTML = 'There are no site members.';
                }
              } else {
                membersHtml.innerHTML = 'There was an error retrieving site members.';
              }
              // Activities
              var recentActivitiesHtml = document.getElementById('recentActivities');
              if (!data.activities.error) {
                var activities = data.activities;
                recentActivitiesHtml.innerHTML = '';
                if (activities.totalResults > 0) {
                  var title, body;
                  for (var i in activities.list) {
                    title = unescape(activities.list[i].title);
                    body = unescape(activities.list[i].body);
                    recentActivitiesHtml.innerHTML += '<p>' + title + body + '</p>';
                  }
                } else {
                  recentActivitiesHtml.innerHTML = 'There are no site activities.';
                }
              } else {
                recentActivitiesHtml.innerHTML = 'There was an error retrieving site activities.';
              }
              adjustHeight();
            }
            function adjustHeight() {
              gadgets.window.adjustHeight();
            }
            var color = 'red';
            var lastColorDiv = document.getElementById('redCell');
            function pickColor(div, newColor) {
              color = newColor;
              div.style.border = '3px solid #666666';
              lastColorDiv.style.border = '3px solid #e5ecf9';
              lastColorDiv = div;
            }
            function createActivity() {
              if (viewer) {
                var activity = opensocial.newActivity({
                  'title': viewer.displayName + ' picked ' + color + ' as their favorite color.'
                });
                opensocial.requestCreateActivity(activity, 'HIGH', function() { setTimeout(initAllData, 1000); });
              } else {
                alert('There was an error creating an activity.');
              }
            }
          </script>
     </body>
   </html>
    ]]>
  </Content>
</Module>